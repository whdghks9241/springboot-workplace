RESTful(Representational State Transfer) :
	웹 서비스에서 서비스 설계 원칙중 하나
	컴퓨터에서 자원을 표현하고 자원을 표현한 상태를 전달하는 아키텍쳐 스타일
	1. 자원(Resource) : 웹 상에 존재하는 모든 개체를 나타냄
			주문, 제품 등 모든 것은 자원
	2. 표현(Representation) : 자원의 상태를 나타내는 것
			      HTML, XML, JSON 등의 형식으로 표현됨
			      클라이언트는 서버로 부터 자원의 표현을 받아서 해석
	3. URL(Uniform Resource Indentifier) : 자원을 고유하게 식별하기 위한 문자열
	4. HTTP Methods : 자원에 대한 특정 동작을 나타냄
		           GET(조회), POST(생성), PUT(수정), DELETE(삭제) 등이 있음

	예제 : 
		자원 : 사용을 하는 사용자
		URI : /users
		HTTP 메서드 : 
			모든 사용자 조회	: GET      /users 
			특정 사용자 조회 	: GET      /users/{id}
			새로운 사용자 생성	: POST    /users
			특정 사용자 수정	: PUT      /users/{id}
			특정 사용자 삭제	: DELETE  /users/{id}


CRUD : 데이터베이스에서 쓰는 작업 조작 기능
RESTful : 웹 서비스 자원을 표현하고 상태를 전송하는 역할
	CRUD 작업을 수행하는데 사용할 수 있음

SpringBoot DevTools : Spring Boot 개발 환경을 향상시키기 위한 도구모음
	클래스 경로 변경감지
	LiveReload : 브라우저를 자동으로 새로 고치고 스타일 시트 및 템플릿 변경사항을
		  실시간으로 반영
	속성재실행 : application.preperties 변경된 내용을 감지하고 런타임 중에 속성을 다시
		   재실행 시켜줌
	모니터링하면서 할 일 하는 애
	개발을 시작하는 관점과 배포가 되는 시점에서 설정을 기본적으로 개발하는 관점으로 맞춰서 설정해줌
	개발을 하다보면 애플리케이션을 재 시작해야 하는 경우가 있음
	
파일을 수정한 다음 저장을 하면 class에 존재하는 파일 변경을 감지하고 우리가 하지 않아도 뒤에서 자동으로 서버를 restart 해줌



Spring Boot Actuator : 모니터링하고 관리하기 위한 확장 모듈
		애플리케이션의 운영 환경에서 정보를 제공하고, 엔드포인트를 통해서
	상태를 조회하고 조작할 수 잇도록 함
	
	엔드포인트 : 네트워크에서 통신이 가능한 지점
		   특정 URL에 HTTP (GET, POST 등) 사용해서 요청으로 해놓으면
			해당 지점에서 특정 동작이 수행
		1. health : 내 애플리케이션 건강한지 건강의 유무는 Up이나 Down 으로 나타냄
		2.  info : 애플리케이션의 정보를 제공하는 공간 사용자의 정의 정보를 포함할 수 있음
		3. metrics : 애플리케이션의 메모리 사용이나 Garbage Collection 횟 수 등의 정보를 확인할 수 있음
Thymeleaf(타임리프) :
	java template 엔진으로 HTML, XML, JavaScript, CSS 등의
	마크업 언어를 처리하는데 사용
	디자인이나 데이터를 템플릿에 
	전달하고 동적으로 페이지 생성 가능하게 함

Spring Web
	스프링 프레임워크 일부, 웹 애플리케이션을 개발하는데 사용되는 모듈
	주로 동기식 웹 애플리케이션을 구축하는데 중점을 두고 있음	
	Spring MVC(Model-View-Controller) : 전통적인 MVC 패턴을 사용해서
	애플리케이션을 구성, 요청과 응답을 처리하기 위해서 컨트롤러 모델 뷰를 사용
	
	RESTful 웹 서비스 : 주석과 규칙을 활용해서 RESTful 를 구축할 수 있도록 지원
	
	webSockets : 웹소켓 통해서 실시간 양방향 통시능ㄹ 지원해서 클라이언트와 서버 간에 데이터를 실제로 교환

	

WEB-Inf 웹에 대한 구조나 설정과 관련된 파일들이 위치하는 공간
	일반적으로 직접적으로 고객(클라이언트)가 직접 접근할 수 없는 공간
	웹 사이트를 만들기위해 필요한 자원을 담아내는 폴더 역할을 함
	
	css 배너이미지 캐릭터 이미지
	css img javascirpt

스프링 부트에서 뷰와 뷰의 설정을 제어하는데 사용되는 설정들
spring.mvc.view.prefix=/WEB-INF/view/
		파일을 실행했을 때
			/WEB-INF/view/home.html 경로로 설정돼서 실행	
최초로 실행될 때 처음에 붙는 머리말                           마지막에 붙는 꼬리표
spring.mvc.view.prefix                   /파일경로~~~~~~~/spring.mvc.view.suffix

spring.mvc.view.suffix=.html

/WEB-INF/view/home.html
/WEB-INF/view/home.jsp


JDBC
자바에서 데이터베이스에 접근하고 SQL 쿼리를 실행하기 위한 JavaAPI 가장 기본적인 수준에서 데이터베이스와의 연결 및 쿼리 실행을 담당

JPA ( Java Persistence API )
자바에서 관계형 데이터베이스와 상호 작용하기 위한 포준 API
JPA자바객체와 데이터베이스 간의 매핑을 담당하며 객체지향 언어 프로그래밍을 보다 편리하게 만들어줌

ORM ( Object-Relational-Mapping ) : JPA 는 ORM을 통해서 자바객체와 데이터베이스 데이블 간에 연결을 제공
@Entity @Table @Column 등의 어노테이션을 사용해서 지정

Mybatis
SQL 매핑 프레임워크
	SQL 쿼리와 자바 객체간의 매핑을 담당
MyBatis SQL 직접 작성하고, XML 파일이나 어노테이션을 통해서 자바 객체와 결과를 매핑

JPA 와 Mybatis 차이는 무엇인가?
JPA는 객체와 데이터베이스 간의 매핑을 간소화해서 개발자가 객체 지향적으로 데이터를 다룰수 있게 해줌

MyBatis는 SQL에 직접적인 제어를 제공해서 개발자가 쿼리의 세부 사항을 더 쉽게 제어할 수 있게 해줌





static : 정적인 코드를 작성
	정적(이미지, CSS, JavaScript)를 저장하는 장소
	서버에서 유동적으로 생성되는것이 아니라 만들어진 그대로 클라이언트(사용자)에게 전달
	IMG, CSS, JavaScript -> static 폴더에 저장 함

templates : view에 표현되는 코드 작성
	이 폴더에 저장된 템플릿은 동적으로 생성된 컨텐츠를 포함할 수 있다.

















